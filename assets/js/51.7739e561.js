(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{316:function(e,t,s){e.exports=s.p+"assets/img/federation.a955d770.png"},488:function(e,t,s){"use strict";s.r(t);var a=s(4),n=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"federation-aspects-and-known-issues"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#federation-aspects-and-known-issues"}},[e._v("#")]),e._v(" Federation Aspects and Known Issues")]),e._v(" "),t("p",[e._v("openEO Platform is a federated platform. This means that multiple independent 'back-ends',\nwhich all support the openEO interface, are combined into a single instance. From the outside,\nit appears to be a single platform, but you get access to data collections and processing resources from\nmultiple instances.")]),e._v(" "),t("p",[e._v("This image gives you a look at platforms that make up the federation:")]),e._v(" "),t("p",[t("img",{attrs:{src:s(316),alt:"openeo.cloud federation"}})]),e._v(" "),t("p",[e._v("At this time, the federation can not yet entirely hide the fact that it is built out of\nseparate components:")]),e._v(" "),t("ul",[t("li",[e._v("Within the same processing request, you can only use collections from the same back-end")]),e._v(" "),t("li",[e._v("Some processes are not (fully) supported by all back-ends.")]),e._v(" "),t("li",[e._v("If a back-end requires data from an external source, bandwidth limitations may result in slower processing.")])]),e._v(" "),t("h2",{attrs:{id:"data-collections"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#data-collections"}},[e._v("#")]),e._v(" Data Collections")]),e._v(" "),t("p",[e._v("The federation exposes the "),t("em",[e._v("union")]),e._v(" of the data collections of each of the underlying back-ends.\nWhen a processing request is submitted to the federated platform, the input collections are used to determine to which back-end the actual processing work should be delegated to.")]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("Note")]),e._v(" "),t("p",[e._v("For the technical discussion on collection federation, see "),t("a",{attrs:{href:"https://github.com/Open-EO/openeo-aggregator/issues/5",target:"_blank",rel:"noopener noreferrer"}},[e._v("Open-EO/openeo-aggregator#5"),t("OutboundLink")],1)])]),e._v(" "),t("h3",{attrs:{id:"terrascope"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#terrascope"}},[e._v("#")]),e._v(" Terrascope")]),e._v(" "),t("p",[e._v("Terrascope hosts a number of collections itself.\nFor coarse resolution data (e.g. 100 m resolution) this is often the full archive,\nwhile for medium resolution (Sentinel 1, 2) data is only offered for selected areas.")]),e._v(" "),t("p",[e._v("Additional data can be processed upon request, if it is not available from another provider.\nThis may result in an additional cost for processing and storage.")]),e._v(" "),t("h3",{attrs:{id:"sentinel-hub"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sentinel-hub"}},[e._v("#")]),e._v(" Sentinel Hub")]),e._v(" "),t("p",[e._v("The Terrascope back-end also integrates with Sentinel Hub (part of Euro Data Cube) to give you\naccess to additional collections.\nThis practically means that data needs to be transferred from Sentinel Hub to the Terrascope data center before it can be processed.\nThis works very well for small areas, or a 100x100km MGRS tile in batch mode,\nbut is not yet recommended for processing medium size to large countries or continents.")]),e._v(" "),t("p",[e._v("The collection metadata of the Terrascope back-end tries to clearly identify which collections are served by Sentinel Hub.")]),e._v(" "),t("h4",{attrs:{id:"commercial-data"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#commercial-data"}},[e._v("#")]),e._v(" Commercial Data")]),e._v(" "),t("p",[e._v("openEO Platform provides direct access to commercial data. Currently, data must be purchased directly through Sentinel Hub (see Sentinel Hub documentation on purchasing commercial data "),t("a",{attrs:{href:"https://docs.sentinel-hub.com/api/latest/api/data-import/",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),t("OutboundLink")],1),e._v("), but we are working to support ordering commercial data directly from the platform in the future.")]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("Experimental usage")]),e._v(" "),t("p",[e._v("The below described way of how to connect to commercial data is currently only supported by the pyhton client and experimental. As such the behavior might still change in the future.")])]),e._v(" "),t("p",[e._v("Data is accessed as part of the load_collection process and via a "),t("code",[e._v("featureflags")]),e._v(" argument. To access the data, you must:")]),e._v(" "),t("ul",[t("li",[e._v("select the commercial data provider in "),t("code",[e._v("collection_id")]),e._v(" (e.g. "),t("code",[e._v('collection_id="PLANETSCOPE"')]),e._v(")")]),e._v(" "),t("li",[e._v("set the Sentinel Hub BYOC collection ID ("),t("code",[e._v("byoc-{id}")]),e._v(") as "),t("code",[e._v("featureflags")]),e._v(" argument\n(e.g. with openEO Python client version 0.10.1 or higher:\n"),t("code",[e._v('datacube.result_node().update_arguments(featureflags={"byoc_collection_id": byoc_collection_id})')]),e._v(")")])]),e._v(" "),t("p",[e._v("Full example of loading a commercial data collection:")]),e._v(" "),t("div",{staticClass:"language-python extra-class"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[e._v("toc "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" connection"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("load_collection"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("\n    collection_id"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"PLANETSCOPE"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    spatial_extent"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"west"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("104.86")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"south"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("8.85")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"east"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("106.11")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"north"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("10.37")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    temporal_extent"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"2019-03-01"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"2020-12-31"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    bands"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"B3"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n\ntoc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("result_node"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("update_arguments"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("featureflags"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"byoc_collection_id"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" byoc_collection_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])]),t("p",[e._v("List of currently supported commercial data providers:")]),e._v(" "),t("ul",[t("li",[e._v("Airbus Pleiades (ID: "),t("a",{attrs:{href:"https://openeo.cloud/data-collections/view/?id=PLEIADES",target:"_blank",rel:"noopener noreferrer"}},[e._v("PLEIADES"),t("OutboundLink")],1),e._v(")")]),e._v(" "),t("li",[e._v("Airbus Spot (ID: "),t("a",{attrs:{href:"https://openeo.cloud/data-collections/view/?id=SPOT",target:"_blank",rel:"noopener noreferrer"}},[e._v("SPOT"),t("OutboundLink")],1),e._v(")")]),e._v(" "),t("li",[e._v("PlanetScope (ID: "),t("a",{attrs:{href:"https://openeo.cloud/data-collections/view/?id=PLANETSCOPE",target:"_blank",rel:"noopener noreferrer"}},[e._v("PLANETSCOPE"),t("OutboundLink")],1),e._v(")")]),e._v(" "),t("li",[e._v("WorldView (ID: "),t("a",{attrs:{href:"https://openeo.cloud/data-collections/view/?id=WORLDVIEW",target:"_blank",rel:"noopener noreferrer"}},[e._v("WORLDVIEW"),t("OutboundLink")],1),e._v(")")])]),e._v(" "),t("h3",{attrs:{id:"eodc"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#eodc"}},[e._v("#")]),e._v(" EODC")]),e._v(" "),t("p",[e._v("EODC provides Sentinel-1 (GRH), Sentinel-2 and Sentinel-3 Level-1 globally. On top, pre-processed Level-2 data is\navailable on request (this may result in additional costs). In detail Gamma0 data processed with SNAP and optical ARD\nproducts processed with FORCE are provided.")]),e._v(" "),t("p",[e._v("If the available pre-processed collections are not sufficient, there is on option to perform ARD processing on demand\nwith SNAP respectively FORCE. This may again result in additional costs for processing and storage.")]),e._v(" "),t("p",[e._v("Currently most processes are only available for Level-2 data. Only the ARD processes can be executed on Level-1 data. Also\nonly either ARD processes "),t("strong",[e._v("or")]),e._v(' "standard" processes can be used in one process graph. Combining both types of processes\nis not yet supported. One option to nevertheless achieve a combination of process types is to run ARD on Level-1 data,\nsave the results of the job, and then in a second job load results and perform additional computations.')]),e._v(" "),t("h3",{attrs:{id:"enforce-back-end-selection-for-common-collections"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#enforce-back-end-selection-for-common-collections"}},[e._v("#")]),e._v(" Enforce back-end selection for common collections")]),e._v(" "),t("p",[e._v("Some collections are provided by multiple underlying back-ends,\npossibly with differences in spatial or temporal coverage.\nThis is exposed in the collection metadata with "),t("code",[e._v("federation:backends")]),e._v(" summary, e.g.:")]),e._v(" "),t("div",{staticClass:"language-json extra-class"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"id"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"WATER_BODIES"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"type"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Collection"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    ...\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"summaries"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"federation:backends"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"vito"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"sentinelhub"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        ...\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),t("p",[e._v("When a user submits a processing request,\nthe federated platform will try, by default, to automatically determine\nwhich underlying back-end is best choice for the actual processing,\nbased for example on the requested spatial extent.")]),e._v(" "),t("p",[e._v("You can however also enforce the selection of a certain back-end\nby using the metadata property filtering feature\nof the "),t("code",[e._v("load_collection")]),e._v(' process.\nFor example, with the Python client, to enforce the selection of\nthe "sentinelhub" back-end:')]),e._v(" "),t("CodeSwitcher",{attrs:{languages:{py:"Python",r:"R"}},scopedSlots:e._u([{key:"py",fn:function(){return[t("div",{staticClass:"language-python extra-class"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[e._v("cube "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" connection"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("load_collection"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"WATER_BODIES"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("\n    properties"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"federation:backends"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("lambda")]),e._v(" v"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" v "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("==")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"sentinelhub"')]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])])]},proxy:!0},{key:"r",fn:function(){return[t("div",{staticClass:"language-r extra-class"},[t("pre",{pre:!0,attrs:{class:"language-r"}},[t("code",[e._v("cube "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" p"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("$")]),e._v("load_collection"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("\n    id "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"WATER_BODIES"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token ellipsis"}},[e._v("...")]),e._v("\n    properties "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" list"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"federation:backends"')]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("==")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"sentinelhub"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])])]},proxy:!0}])}),e._v(" "),t("h2",{attrs:{id:"processes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#processes"}},[e._v("#")]),e._v(" Processes")]),e._v(" "),t("p",[e._v("Each of the underlying back-ends of the federation can define its own set of available processes,\nbut there is in practice a very large common ground across these back-ends.\nAs such, the federation's listing of available processes is the "),t("em",[e._v("intersection")]),e._v("\nof the process sets of each of the underlying back-ends.\nThis is the most straightforward combination with the least surprise.")]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("Advanced/experimental usage")]),e._v(" "),t("p",[e._v("A savvy user that knows which underlying back-end will execute their job\ncan however still submit process graphs with processes that are available\non that back-end but fall outside the intersection,\nas the federation will just forward the process graph as-is to that back-end.")])]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("Note")]),e._v(" "),t("p",[e._v("For the technical discussion on process federation, see "),t("a",{attrs:{href:"https://github.com/Open-EO/openeo-aggregator/issues/4",target:"_blank",rel:"noopener noreferrer"}},[e._v("Open-EO/openeo-aggregator#4"),t("OutboundLink")],1)])]),e._v(" "),t("h2",{attrs:{id:"file-formats"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#file-formats"}},[e._v("#")]),e._v(" File formats")]),e._v(" "),t("p",[e._v("The federation currently lists the "),t("em",[e._v("union")]),e._v(" of import/export file formats available\nat each of the underlying back-ends.")]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("Note")]),e._v(" "),t("p",[e._v("For the technical discussion on file format federation, see "),t("a",{attrs:{href:"https://github.com/Open-EO/openeo-aggregator/issues/1",target:"_blank",rel:"noopener noreferrer"}},[e._v("Open-EO/openeo-aggregator#1"),t("OutboundLink")],1)])]),e._v(" "),t("h2",{attrs:{id:"on-demand-preview"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#on-demand-preview"}},[e._v("#")]),e._v(" On-demand-preview")]),e._v(" "),t("p",[e._v("Sometimes there is a need to quickly inspect results of a process graph on the map without first running the entire graph first and waiting for the results to be computed and returned. This "),t("code",[e._v("on-demand-preview")]),e._v(" is available in the "),t("a",{attrs:{href:"https://editor.openeo.cloud/",target:"_blank",rel:"noopener noreferrer"}},[e._v("openEO Platform Editor"),t("OutboundLink")],1),e._v(" and the "),t("a",{attrs:{href:"https://open-eo.github.io/openeo-python-client/index.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("openEO Python Client*"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("p",[e._v("In the Editor you can find the functionality in the "),t("code",[e._v("Web Services")]),e._v(" tab. Use the button"),t("code",[e._v("Show on Map")]),e._v(".")]),e._v(" "),t("p",[e._v("In the Python Client, you can use the "),t("a",{attrs:{href:"https://open-eo.github.io/openeo-python-client/api.html#openeo.rest.datacube.DataCube.preview",target:"_blank",rel:"noopener noreferrer"}},[e._v(".preview() method"),t("OutboundLink")],1),e._v(" to create a service with your process graph and display the results in an ipyleaflet Map object. You can find an example implementation in "),t("a",{attrs:{href:"https://github.com/openEOPlatform/sample-notebooks/blob/main/on-demand_preview.ipynb",target:"_blank",rel:"noopener noreferrer"}},[e._v("this Jupyter notebook"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("Note")]),e._v(" "),t("p",[e._v("This functionallity currently only works with collections that are also on the Sentinel Hub backend (Provider > Backend > sentinelhub). In order for the map to display meaningful results, your process graph should:")]),e._v(" "),t("ul",[t("li",[e._v("return one or three bands,")]),e._v(" "),t("li",[e._v("a single temporal extent,")]),e._v(" "),t("li",[e._v("and scale the data to a range so that the output format can adequately save it.")])])]),e._v(" "),t("p",[e._v("*You need to have at least version 0.19.0 installed to use this functionality.")]),e._v(" "),t("h2",{attrs:{id:"batch-jobs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#batch-jobs"}},[e._v("#")]),e._v(" Batch jobs")]),e._v(" "),t("p",[e._v("As discussed above, when the federated platform receives a processing request, such as a batch job,\nit will automatically determine to which back-end this request should be delegated for actual processing.")]),e._v(" "),t("h3",{attrs:{id:"managed-job-splitting"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#managed-job-splitting"}},[e._v("#")]),e._v(" Managed job splitting")]),e._v(" "),t("p",[e._v("In addition to this basic delegation feature, the federation also provides more advanced (pre)processing capabilities.\nFor instance, the federation platform can be instructed to split up a single batch job in multiple sub-jobs\nand distribute these across one or more processing back-ends.\nThe federation platform will automatically create, start and keep track of these sub-jobs\nwhile the user just have to interact with a single job: e.g. check the overall processing status,\ndownload the combined result assets, ...")]),e._v(" "),t("p",[e._v("Currently, spatial tile-based splitting is supported as splitting strategy\nand it can be enabled by providing a specific job option when submitting the batch job.\nFor example, using the openEO Python Client, instruct the federation platform to\nsplit up datacube processing in UTM based tiles of 20km by 20km:")]),e._v(" "),t("div",{staticClass:"language-python extra-class"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[e._v("job "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" datacube"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("create_job"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("\n    job_options"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"tile_grid"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"utm-20km"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])]),t("p",[e._v('This creates a virtual master job on the level of the federation platform and real batch jobs\non the appropriate processing back-ends.\nSubsequent interaction (starting the jobs, polling their status, requesting the result assets, ...)\ncan be done through the "master" '),t("code",[e._v("job")]),e._v(" object created above, in the same way as with normal batch jobs.")]),e._v(" "),t("h3",{attrs:{id:"validity-of-signed-urls-in-batch-job-results"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#validity-of-signed-urls-in-batch-job-results"}},[e._v("#")]),e._v(" Validity of signed URLs in batch job results")]),e._v(" "),t("p",[e._v("Batch job results are accessible to the user via signed URLs stored in the result assets. Within the platform,\nthese URLs have a validity (expiry time) of 7 days. Within these 7 days, the results of a batch job can be accessed\nby any person with the URL. Each time a user requests the results from the job endpoint ("),t("code",[e._v("GET /jobs/{job_id}/results")]),e._v("),\na freshly signed URL (valid for 7 days) is created for the result assets.")]),e._v(" "),t("h3",{attrs:{id:"customizing-batch-job-resources-on-terrascope"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#customizing-batch-job-resources-on-terrascope"}},[e._v("#")]),e._v(" Customizing batch job resources on Terrascope")]),e._v(" "),t("p",[e._v("Jobs running on the (Terrascope) cluster get assigned a default amount of CPU and memory resources. This\nmay not always be enough for your job, for instance when using UDF's. Also for very large jobs, you may want\nto tune your resource settings to optimize for cost.")]),e._v(" "),t("p",[e._v("The example below shows how to start a job with all options set to their default values. It is important to highlight\nthat default settings are subject to change by the backend whenever needed.")]),e._v(" "),t("div",{staticClass:"language-python extra-class"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[e._v("job_options "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("        \n        "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"executor-memory"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"2G"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"executor-memoryOverhead"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"3G"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"executor-cores"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"task-cpus"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"executor-request-cores"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"400m"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"max-executors"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"100"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"driver-memory"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"8G"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"driver-memoryOverhead"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"2G"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"driver-cores"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"udf-dependency-archives"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"logging-threshold"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"info"')]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\ncube"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("execute_batch"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("job_options"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("job_options"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])]),t("p",[e._v("This is a short overview of the various options:")]),e._v(" "),t("ul",[t("li",[e._v("executor-memory: memory assigned to your workers, for the JVM that executes most predefined processes")]),e._v(" "),t("li",[e._v("executor-memoryOverhead: memory assigned on top of the JVM, for instance to run UDF's")]),e._v(" "),t("li",[e._v("executor-cores: number of CPUs per worker (executor). The number of parallel tasks is executor-cores/task-cpus")]),e._v(" "),t("li",[e._v("task-cpus: CPUs assigned to a single task. UDF's using libraries like Tensorflow can benefit from further parallellization on the level of individual tasks.")]),e._v(" "),t("li",[e._v("executor-request-cores: this settings is only relevant for Kubernetes based backends, allows to overcommit CPU")]),e._v(" "),t("li",[e._v("max-executors: the maximum number of workers assigned to your job. Maximum number of parallel tasks is "),t("code",[e._v("max-executors*executor-cores/task-cpus")]),e._v(". Increasing this can inflate your costs, while not necessarily improving performance!")]),e._v(" "),t("li",[e._v("driver-memory: memory assigned to the spark 'driver' JVM that controls execution of your batch job")]),e._v(" "),t("li",[e._v("driver-memoryOverhead: memory assigned to the spark 'driver' on top of JVM memory, for Python processes.")]),e._v(" "),t("li",[e._v("logging-threshold: the threshold for logging, set to 'info' by default, can be set to 'debug' to generate much more logging")]),e._v(" "),t("li",[e._v("udf-dependency-archives: an array of urls pointing to zip files with extra dependencies, see below")])]),e._v(" "),t("h4",{attrs:{id:"custom-udf-dependencies"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#custom-udf-dependencies"}},[e._v("#")]),e._v(" Custom UDF dependencies")]),e._v(" "),t("p",[e._v("User defined functions often depend on (specific versions of) libraries or require small auxiliary data files. The UDF specifications do not yet\ndefine a standardized manner to provide this other than having the ability of selecting from a predefined set of 'runtimes' that than again have a predefined configuration.")]),e._v(" "),t("p",[e._v("The Terrascope/Geotrellis backends solve this via the udf-dependency-archives job option, that allows to specify a list of zip files that should be included in the working directory of the UDF.")]),e._v(" "),t("p",[e._v("This enables the following example workflow for Python UDF's:")]),e._v(" "),t("ol",[t("li",[e._v("Create a Python 'virtualenv' with your dependencies")]),e._v(" "),t("li",[e._v("Based on the 'site-packages' directory of the virtualenv, create a zip file with all dependencies")]),e._v(" "),t("li",[e._v("Upload the zip to a url that can be reached by the backend.")]),e._v(" "),t("li",[e._v("In job options, add  "),t("code",[e._v("\"udf-dependency-archives\": ['https://yourhost.com/myEnv.zip#tmp/mydir']")]),e._v(" The "),t("code",[e._v("#tmp/mydir")]),e._v(" suffix indicates where you want to unzip your files, relative to the working directory.")]),e._v(" "),t("li",[e._v("In your UDF, before trying to import libraries, add your directory to the Python path: "),t("code",[e._v("sys.path.insert(0, 'tmp/mydir')")])]),e._v(" "),t("li",[e._v("Now your libraries should be loaded before anything else!")])]),e._v(" "),t("p",[e._v("Known limitations:")]),e._v(" "),t("ul",[t("li",[e._v("Your dependencies need to be compatible with the Python version of the backend, currently 3.8.")]),e._v(" "),t("li",[e._v("Your dependencies need to be compatible with the OS of the backend, currently AlmaLinux 8.")]),e._v(" "),t("li",[e._v("The backend has a limited set of Python dependences that are preloaded, and cannot be changed, such as numpy.")])]),e._v(" "),t("h4",{attrs:{id:"learning-more"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#learning-more"}},[e._v("#")]),e._v(" Learning more")]),e._v(" "),t("p",[e._v("The topic of resource optimization is a complex one, and here we just give a short summary. The goal of openEO is to hide most of these\ndetails from the user, but we realize that advanced users sometimes want to have a bit more insight, so in the spirit of being open, we give some hints.")]),e._v(" "),t("p",[e._v("To learn more about these options, we point to the piece of code that handles this:")]),e._v(" "),t("p",[e._v("https://github.com/Open-EO/openeo-geopyspark-driver/blob/faf5d5364a82e870e42efd2a8aee9742f305da9f/openeogeotrellis/backend.py#L1213")]),e._v(" "),t("p",[e._v("Most memory related options are translated to Apache Spark configuration settings, which are documented here:")]),e._v(" "),t("p",[e._v("https://spark.apache.org/docs/3.3.1/configuration.html#application-properties")]),e._v(" "),t("h3",{attrs:{id:"batch-job-results-on-sentinel-hub"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#batch-job-results-on-sentinel-hub"}},[e._v("#")]),e._v(" Batch job results on Sentinel Hub")]),e._v(" "),t("p",[e._v("If you are processing data and the underlying back-end is Sentinel Hub, the output extent of your batch job results is currently larger than your input extent because Sentinel Hub processes whole tiles (this may change in the future and the data will be cropped to your input extent).")])],1)}),[],!1,null,null,null);t.default=n.exports}}]);